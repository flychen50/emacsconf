;; Object semantic/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semantic/"
  :tables
  (list
    (semanticdb-table "ia.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("semantic/analyze" include nil nil [1209 1236])
            ("semantic/format" include nil nil [1237 1263])
            ("pulse" include nil nil [1264 1280])
            ("semantic/senator" include nil nil [1281 1308])
            ("semantic/analyze/refs" include nil nil [1309 1341])
            ("semantic/find" include nil nil [1393 1417])
            ("semantic/analyze" include nil nil [1363 1390])
            ("declare-function" code nil nil [1420 1464])
            ("semantic-ia-completion-format-tag-function" variable (:default-value (quote semantic-format-tag-prototype)) nil [1571 1783])
            ("semantic-ia-insert-tag" function
               (:overloadable t
                :arguments ("tag"))
                nil [2142 2261])
            ("semantic-ia-insert-tag-default" function (:arguments ("tag")) nil [2263 2501])
            ("defalias" code nil nil [2503 2682])
            ("semantic-ia-get-completions-deprecated" function (:arguments ("context" "point")) nil [2684 3020])
            ("semantic-ia-complete-symbol" function
               (:user-visible-flag t
                :arguments ("pos"))
                nil [3037 5248])
            ("semantic-ia-completion-menu-format-tag-function" variable
               (:user-visible-flag t
                :default-value (quote semantic-format-tag-uml-concise-prototype))
                nil [5250 5480])
            ("semantic-ia-complete-symbol-menu" function
               (:user-visible-flag t
                :arguments ("point"))
                nil [5497 6878])
            ("semantic-ia-complete-tip" function
               (:user-visible-flag t
                :arguments ("point"))
                nil [7045 7797])
            ("semantic-ia-show-summary" function
               (:user-visible-flag t
                :arguments ("point"))
                nil [7914 8428])
            ("semantic-ia-show-variants" function
               (:user-visible-flag t
                :arguments ("point"))
                nil [8511 9908])
            ("semantic-ia--fast-jump-helper" function (:arguments ("dest")) nil [10100 11410])
            ("declare-function" code nil nil [11412 11492])
            ("semantic-ia-fast-jump" function
               (:user-visible-flag t
                :arguments ("point"))
                nil [11509 13896])
            ("semantic-ia-fast-mouse-jump" function
               (:user-visible-flag t
                :arguments ("evt"))
                nil [13913 14238])
            ("semantic-ia-show-doc" function
               (:user-visible-flag t
                :arguments ("point"))
                nil [14411 15793])
            ("semantic-ia-describe-class" function
               (:user-visible-flag t
                :arguments ("typename"))
                nil [15810 17351])
            ("semantic/ia" package nil nil [17353 17375]))          
      :file "ia.el"
      :pointmax 17524
      :fsize 17523
      :lastmodtime '(21639 49900 0 0)
      :unmatched-syntax '((close-paren 1417 . 1418) (symbol 1343 . 1360) (open-paren 1342 . 1343)))
    (semanticdb-table "analyze.el"
      :file "analyze.el"
      :fsize 30214
      :lastmodtime '(21639 49900 0 0))
    (semanticdb-table "format.el"
      :file "format.el"
      :fsize 27605
      :lastmodtime '(21639 49900 0 0))
    (semanticdb-table "senator.el"
      :file "senator.el"
      :fsize 58110
      :lastmodtime '(21639 49900 0 0))
    (semanticdb-table "find.el"
      :file "find.el"
      :fsize 27562
      :lastmodtime '(21639 49900 0 0)))
  :file "!root!.emacs.d!cedet!lisp!cedet!semantic!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
