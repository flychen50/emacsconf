;; Object lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisp/"
  :tables
  (list
    (semanticdb-table "subr.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("declare-function" function (:arguments ("_fn" "_file" "_arglist" "_fileonly")) nil [1111 2631])
            ("defalias" code nil nil [2660 2681])
            ("noreturn" function (:arguments ("form")) nil [2683 2887])
            ("1value" function (:arguments ("form")) nil [2889 3127])
            ("def-edebug-spec" function (:arguments ("symbol" "spec")) nil [3129 3589])
            ("lambda" function (:arguments ("cdr")) nil [3591 4749])
            ("setq-local" function (:arguments ("var" "val")) nil [4751 4963])
            ("defvar-local" function (:arguments ("var" "val" "docstring")) nil [4965 5406])
            ("apply-partially" function (:arguments ("fun" "args")) nil [5408 5823])
            ("push" function (:arguments ("newelt" "place")) nil [5825 6419])
            ("pop" function (:arguments ("place")) nil [6421 7232])
            ("when" function (:arguments ("cond" "body")) nil [7234 7522])
            ("unless" function (:arguments ("cond" "body")) nil [7524 7810])
            ("dolist" function (:arguments ("spec" "body")) nil [7812 9091])
            ("dotimes" function (:arguments ("spec" "body")) nil [9093 10558])
            ("declare" function (:arguments ("_specs")) nil [10560 11075])
            ("ignore-errors" function (:arguments ("body")) nil [11077 11384])
            ("ignore" function
               (:user-visible-flag t
                :arguments ("_ignore"))
                nil [11415 11563])
            ("error" function (:arguments ("args")) nil [11620 12006])
            ("user-error" function (:arguments ("format" "args")) nil [12008 12534])
            ("define-error" function (:arguments ("name" "message" "parent")) nil [12536 13448])
            ("frame-configuration-p" function (:arguments ("object")) nil [13562 13817])
            ("caar" function (:arguments ("x")) nil [13842 13913])
            ("cadr" function (:arguments ("x")) nil [13915 13986])
            ("cdar" function (:arguments ("x")) nil [13988 14059])
            ("cddr" function (:arguments ("x")) nil [14061 14132])
            ("last" function (:arguments ("list" "n")) nil [14134 14551])
            ("butlast" function (:arguments ("list" "n")) nil [14553 14781])
            ("nbutlast" function (:arguments ("list" "n")) nil [14783 15060])
            ("delete-dups" function (:arguments ("list")) nil [15062 15415])
            ("delete-consecutive-dups" function (:arguments ("list" "circular")) nil [15492 15960])
            ("number-sequence" function (:arguments ("from" "to" "inc")) nil [15962 17779])
            ("copy-tree" function (:arguments ("tree" "vecp")) nil [17781 18530])
            ("assoc-default" function (:arguments ("key" "alist" "test" "default")) nil [18570 19370])
            ("assoc-ignore-case" function (:arguments ("key" "alist")) nil [19372 19694])
            ("assoc-ignore-representation" function (:arguments ("key" "alist")) nil [19696 19964])
            ("member-ignore-case" function (:arguments ("elt" "list")) nil [19966 20401])
            ("assq-delete-all" function (:arguments ("key" "alist")) nil [20403 20887])
            ("rassq-delete-all" function (:arguments ("value" "alist")) nil [20889 21382])
            ("remove" function (:arguments ("elt" "seq")) nil [21384 21737])
            ("remq" function (:arguments ("elt" "list")) nil [21739 22070])
            ("kbd" function (:arguments ("keys")) nil [22095 22405])
            ("put" code nil nil [22406 22424])
            ("undefined" function (:user-visible-flag t) nil [22426 22881])
            ("put" code nil nil [22976 23011])
            ("suppress-keymap" function (:arguments ("map" "nodigits")) nil [23013 23577])
            ("make-composed-keymap" function (:arguments ("maps" "parent")) nil [23579 24231])
            ("define-key-after" function (:arguments ("keymap" "key" "definition" "after")) nil [24233 26294])
            ("map-keymap-sorted" function (:arguments ("function" "keymap")) nil [26296 26976])
            ("keymap--menu-item-binding" function (:arguments ("val")) nil [26978 27448])
            ("keymap--menu-item-with-binding" function (:arguments ("item" "binding")) nil [27502 28102])
            ("keymap--merge-bindings" function (:arguments ("val1" "val2")) nil [28104 28570])
            ("keymap-canonicalize" function (:arguments ("map")) nil [28572 30441])
            ("put" code nil nil [30443 30500])
            ("keyboard-translate" function (:arguments ("from" "to")) nil [30502 30877])
            ("global-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [30908 31654])
            ("local-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [31656 32460])
            ("global-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32462 32658])
            ("local-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32660 32889])
            ("key-substitution-in-progress" variable nil nil [32945 33038])
            ("substitute-key-definition" function (:arguments ("olddef" "newdef" "keymap" "oldmap" "prefix")) nil [33040 34424])
            ("substitute-key-definition-key" function (:arguments ("defn" "olddef" "newdef" "prefix" "keymap")) nil [34426 36091])
            ("global-map" variable nil nil [36240 36414])
            ("esc-map" variable nil nil [36416 36556])
            ("ctl-x-map" variable nil nil [36558 36693])
            ("ctl-x-4-map" variable (:default-value (make-sparse-keymap)) nil [36695 36773])
            ("defalias" code nil nil [36774 36812])
            ("define-key" code nil nil [36813 36855])
            ("ctl-x-5-map" variable (:default-value (make-sparse-keymap)) nil [36857 36929])
            ("defalias" code nil nil [36930 36968])
            ("define-key" code nil nil [36969 37011])
            ("listify-key-sequence-1" variable
               (:constant-flag t
                :default-value (logior 128 134217728))
                nil [37051 37106])
            ("listify-key-sequence" function (:arguments ("key")) nil [37108 37346])
            ("eventp" function (:arguments ("obj")) nil [37348 37549])
            ("event-modifiers" function (:arguments ("event")) nil [37551 38845])
            ("event-basic-type" function (:arguments ("event")) nil [38847 39615])
            ("mouse-movement-p" function (:arguments ("object")) nil [39617 39750])
            ("mouse-event-p" function (:arguments ("object")) nil [39752 39970])
            ("event-start" function (:arguments ("event")) nil [39972 41132])
            ("event-end" function (:arguments ("event")) nil [41134 41452])
            ("event-click-count" function (:arguments ("event")) nil [41454 41664])
            ("posnp" function (:arguments ("obj")) nil [41721 42021])
            ("posn-window" function (:arguments ("position")) nil [42055 42237])
            ("posn-area" function (:arguments ("position")) nil [42239 42563])
            ("posn-point" function (:arguments ("position")) nil [42565 43031])
            ("posn-set-point" function (:arguments ("position")) nil [43033 43353])
            ("posn-x-y" function (:arguments ("position")) nil [43355 43608])
            ("declare-function" code nil nil [43610 43676])
            ("posn-col-row" function (:arguments ("position")) nil [43678 45154])
            ("posn-actual-col-row" function (:arguments ("position")) nil [45156 45746])
            ("posn-timestamp" function (:arguments ("position")) nil [45748 45936])
            ("posn-string" function (:arguments ("position")) nil [45938 46297])
            ("posn-image" function (:arguments ("position")) nil [46299 46539])
            ("posn-object" function (:arguments ("position")) nil [46541 46910])
            ("posn-object-x-y" function (:arguments ("position")) nil [46912 47199])
            ("posn-object-width-height" function (:arguments ("position")) nil [47201 47461])
            ("define-obsolete-function-alias" code nil nil [47504 47569])
            ("define-obsolete-function-alias" code nil nil [47570 47643])
            ("define-obsolete-function-alias" code nil nil [47644 47708])
            ("define-obsolete-function-alias" code nil nil [47709 47780])
            ("define-obsolete-function-alias" code nil nil [47781 47854])
            ("define-obsolete-function-alias" code nil nil [47855 47927])
            ("make-obsolete" code nil nil [47929 47995])
            ("make-obsolete" code nil nil [47996 48045])
            ("insert-string" function (:arguments ("args")) nil [48047 48365])
            ("makehash" function (:arguments ("test")) nil [48367 48487])
            ("log10" function (:arguments ("x")) nil [48489 48598])
            ("defalias" code nil nil [48646 48680])
            ("make-obsolete" code nil nil [48681 48735])
            ("defalias" code nil nil [48736 48772])
            ("make-obsolete" code nil nil [48773 48829])
            ("make-obsolete" code nil nil [48830 48937])
            ("set-advertised-calling-convention" code nil nil [48938 49039])
            ("set-advertised-calling-convention" code nil nil [49040 49108])
            ("set-advertised-calling-convention" code nil nil [49109 49194])
            ("set-advertised-calling-convention" code nil nil [49195 49264])
            ("set-advertised-calling-convention" code nil nil [49265 49334])
            ("make-obsolete-variable" code nil nil [49739 49814])
            ("make-obsolete-variable" code nil nil [49815 49894])
            ("make-obsolete-variable" code nil nil [49895 49962])
            ("make-obsolete-variable" code nil nil [49963 50028])
            ("make-obsolete-variable" code nil nil [50029 50090])
            ("make-obsolete-variable" code nil nil [50091 50162])
            ("make-obsolete-variable" code nil nil [50163 50228])
            ("make-obsolete-variable" code nil nil [50229 50290])
            ("make-obsolete-variable" code nil nil [50291 50366])
            ("make-obsolete-variable" code nil nil [50367 50444])
            ("make-obsolete-variable" code nil nil [50445 50524])
            ("make-obsolete-variable" code nil nil [50525 50602])
            ("make-obsolete-variable" code nil nil [50603 50682])
            ("make-obsolete-variable" code nil nil [50683 50772])
            ("make-obsolete-variable" code nil nil [50773 50848])
            ("make-obsolete-variable" code nil nil [50849 50930])
            ("make-obsolete-variable" code nil nil [50931 51014])
            ("make-obsolete-variable" code nil nil [51015 51110])
            ("make-obsolete-variable" code nil nil [51111 51198])
            ("make-obsolete-variable" code nil nil [51199 51280])
            ("make-obsolete-variable" code nil nil [51281 51368])
            ("make-obsolete-variable" code nil nil [51369 51460])
            ("make-obsolete-variable" code nil nil [51461 51526])
            ("make-obsolete-variable" code nil nil [51527 51592])
            ("make-obsolete-variable" code nil nil [51593 51696])
            ("make-obsolete-variable" code nil nil [51697 51790])
            ("make-obsolete-variable" code nil nil [51791 51854])
            ("make-obsolete-variable" code nil nil [51855 51995])
            ("make-obsolete-variable" code nil nil [51997 52061])
            ("make-obsolete-variable" code nil nil [52062 52145])
            ("make-obsolete-variable" code nil nil [52146 52218])
            ("make-obsolete-variable" code nil nil [52219 52295])
            ("make-obsolete" code nil nil [52296 52352])
            ("make-obsolete" code nil nil [52353 52413])
            ("make-obsolete" code nil nil [52415 52469])
            ("make-obsolete" code nil nil [52470 52526])
            ("define-obsolete-variable-alias" code nil nil [52565 52652])
            ("define-obsolete-variable-alias" code nil nil [52654 52747])
            ("define-obsolete-variable-alias" code nil nil [52748 52841])
            ("make-obsolete-variable" code nil nil [53087 53151])
            ("defvaralias" code nil nil [53153 53210])
            ("defalias" code nil nil [53283 53327])
            ("defalias" code nil nil [53328 53372])
            ("defalias" code nil nil [53373 53406])
            ("defalias" code nil nil [53407 53440])
            ("defalias" code nil nil [53441 53476])
            ("defalias" code nil nil [53477 53503])
            ("defalias" code nil nil [53504 53530])
            ("defalias" code nil nil [53531 53553])
            ("defalias" code nil nil [53579 53618])
            ("defalias" code nil nil [53619 53673])
            ("defalias" code nil nil [53674 53744])
            ("defalias" code nil nil [53745 53817])
            ("defalias" code nil nil [53818 53861])
            ("defalias" code nil nil [53862 53906])
            ("defalias" code nil nil [53907 53940])
            ("defalias" code nil nil [53941 53974])
            ("defalias" code nil nil [54006 54049])
            ("defalias" code nil nil [54050 54099])
            ("defalias" code nil nil [54101 54154])
            ("add-hook" function (:arguments ("hook" "function" "append" "local")) nil [54193 56322])
            ("remove-hook" function (:arguments ("hook" "function" "local")) nil [56324 57992])
            ("letrec" function (:arguments ("binders" "body")) nil [57994 58623])
            ("with-wrapper-hook" function (:arguments ("hook" "args" "body")) nil [58625 61678])
            ("add-to-list" function (:arguments ("list-var" "element" "append" "compare-fn")) nil [61680 65027])
            ("add-to-ordered-list" function (:arguments ("list-var" "element" "order")) nil [65030 66349])
            ("add-to-history" function (:arguments ("history-var" "newelt" "maxelt" "keep-all")) nil [66351 67563])
            ("delay-mode-hooks" variable nil nil [67585 67679])
            ("delayed-mode-hooks" variable nil nil [67680 67761])
            ("make-variable-buffer-local" code nil nil [67762 67810])
            ("put" code nil nil [67811 67853])
            ("change-major-mode-after-body-hook" variable nil nil [67855 67969])
            ("after-change-major-mode-hook" variable nil nil [67971 68073])
            ("run-mode-hooks" function (:arguments ("hooks")) nil [68075 68958])
            ("delay-mode-hooks" function (:arguments ("body")) nil [68960 69361])
            ("derived-mode-p" function (:arguments ("modes")) nil [69422 69735])
            ("minor-mode-list" variable (:default-value (quote (auto-save-mode auto-fill-mode abbrev-mode overwrite-mode view-mode hs-minor-mode))) nil [69926 70119])
            ("add-minor-mode" function (:arguments ("toggle" "name" "keymap" "after" "toggle-fun")) nil [70121 72806])
            ("autoloadp" function (:arguments ("object")) nil [72828 72930])
            ("symbol-file" function (:arguments ("symbol" "type")) nil [73414 74621])
            ("locate-library" function
               (:user-visible-flag t
                :arguments ("library" "nosuffix" "path" "interactive-call"))
                nil [74623 76029])
            ("process-lines" function (:arguments ("program" "args")) nil [76054 76659])
            ("process-live-p" function (:arguments ("process")) nil [76661 76974])
            ("make-obsolete" code nil nil [76994 77119])
            ("process-kill-without-query" function (:arguments ("process" "_flag")) nil [77120 77464])
            ("process-kill-buffer-query-function" function nil nil [77466 77885])
            ("add-hook" code nil nil [77887 77962])
            ("process-get" function (:arguments ("process" "propname")) nil [77993 78205])
            ("process-put" function (:arguments ("process" "propname" "value")) nil [78207 78446])
            ("read-key-empty-map" variable
               (:constant-flag t
                :default-value (make-sparse-keymap))
                nil [78486 78536])
            ("read-key-delay" variable (:default-value 0.01) nil [78538 78566])
            ("read-key" function (:arguments ("prompt")) nil [78615 81321])
            ("read-passwd-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "" (function delete-minibuffer-contents)) map)) nil [81323 81660])
            ("read-passwd" function (:arguments ("prompt" "confirm" "default")) nil [81662 84434])
            ("read-number" function (:arguments ("prompt" "default")) nil [84436 85506])
            ("read-char-choice" function (:arguments ("prompt" "chars" "inhibit-keyboard-quit")) nil [85508 87247])
            ("sit-for" function (:arguments ("seconds" "nodisp" "obsolete")) nil [87249 89598])
            ("declare-function" code nil nil [89638 89717])
            ("y-or-n-p" function (:arguments ("prompt")) nil [89719 93197])
            ("atomic-change-group" function (:arguments ("body")) nil [93228 94434])
            ("prepare-change-group" function (:arguments ("buffer")) nil [94436 95912])
            ("activate-change-group" function (:arguments ("handle")) nil [95914 96152])
            ("accept-change-group" function (:arguments ("handle")) nil [96154 96445])
            ("cancel-change-group" function (:arguments ("handle")) nil [96447 97618])
            ("define-obsolete-function-alias" code nil nil [97676 97758])
            ("momentary-string-display" function (:arguments ("string" "pos" "exit-char" "message")) nil [97760 99260])
            ("copy-overlay" function (:arguments ("o")) nil [99289 99863])
            ("remove-overlays" function (:arguments ("beg" "end" "name" "val")) nil [99865 100873])
            ("suspend-hook" variable nil nil [100895 100979])
            ("suspend-resume-hook" variable nil nil [100981 101079])
            ("temp-buffer-show-hook" variable nil nil [101081 101297])
            ("temp-buffer-setup-hook" variable nil nil [101299 101530])
            ("user-emacs-directory" variable
               (:constant-flag t
                :default-value (if (eq system-type (quote ms-dos)) "~/_emacs.d/" "~/.emacs.d/"))
                nil [101532 101907])
            ("buffer-narrowed-p" function nil nil [101940 102074])
            ("find-tag-default-bounds" function nil nil [102076 103079])
            ("find-tag-default" function nil nil [103081 103347])
            ("find-tag-default-as-regexp" function nil nil [103349 103784])
            ("find-tag-default-as-symbol-regexp" function nil nil [103786 104345])
            ("play-sound" function (:arguments ("sound")) nil [104347 105166])
            ("declare-function" code nil nil [105168 105224])
            ("shell-quote-argument" function (:arguments ("argument")) nil [105226 107371])
            ("string-or-null-p" function (:arguments ("object")) nil [107373 107510])
            ("booleanp" function (:arguments ("object")) nil [107512 107670])
            ("special-form-p" function (:arguments ("object")) nil [107672 107917])
            ("macrop" function (:arguments ("object")) nil [107919 108151])
            ("field-at-pos" function (:arguments ("pos")) nil [108153 108423])
            ("sha1" function (:arguments ("object" "start" "end" "binary")) nil [108425 108788])
            ("defalias" code nil nil [108790 109143])
            ("function-get" function (:arguments ("f" "prop" "autoload")) nil [109145 109955])
            ("yank-handled-properties" variable nil nil [110062 110094])
            ("yank-excluded-properties" variable nil nil [110095 110128])
            ("remove-yank-excluded-properties" function (:arguments ("start" "end")) nil [110130 110919])
            ("yank-undo-function" variable nil nil [110921 110948])
            ("insert-for-yank" function (:arguments ("string")) nil [110950 111309])
            ("insert-for-yank-1" function (:arguments ("string")) nil [111311 113661])
            ("insert-buffer-substring-no-properties" function (:arguments ("buffer" "start" "end")) nil [113663 114148])
            ("insert-buffer-substring-as-yank" function (:arguments ("buffer" "start" "end")) nil [114150 114836])
            ("yank-handle-font-lock-face-property" function (:arguments ("face" "start" "end")) nil [114838 115150])
            ("yank-handle-category-property" function (:arguments ("category" "start" "end")) nil [115289 115727])
            ("start-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [115765 116678])
            ("set-advertised-calling-convention" code nil nil [116679 116808])
            ("start-file-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [116810 117229])
            ("set-advertised-calling-convention" code nil nil [117230 117364])
            ("call-process-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [117366 118811])
            ("process-file-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [118813 119257])
            ("with-current-buffer" function (:arguments ("buffer-or-name" "body")) nil [119312 119700])
            ("internal--before-with-selected-window" function (:arguments ("window")) nil [119702 120222])
            ("internal--after-with-selected-window" function (:arguments ("state")) nil [120224 120784])
            ("with-selected-window" function (:arguments ("window" "body")) nil [120786 121924])
            ("with-selected-frame" function (:arguments ("frame" "body")) nil [121926 122667])
            ("save-window-excursion" function (:arguments ("body")) nil [122669 123488])
            ("internal-temp-output-buffer-show" function (:arguments ("buffer")) nil [123490 124885])
            ("with-output-to-temp-buffer" function (:arguments ("bufname" "body")) nil [124938 127391])
            ("with-temp-file" function (:arguments ("file" "body")) nil [127393 128088])
            ("with-temp-message" function (:arguments ("message" "body")) nil [128090 129017])
            ("with-temp-buffer" function (:arguments ("body")) nil [129019 129578])
            ("with-silent-modifications" function (:arguments ("body")) nil [129580 130778])
            ("with-output-to-string" function (:arguments ("body")) nil [130780 131225])
            ("with-local-quit" function (:arguments ("body")) nil [131227 131982])
            ("while-no-input" function (:arguments ("body")) nil [131984 132484])
            ("condition-case-unless-debug" function (:arguments ("var" "bodyform" "handlers")) nil [132486 133039])
            ("define-obsolete-function-alias" code nil nil [133041 133136])
            ("with-demoted-errors" function (:arguments ("format" "body")) nil [133138 134075])
            ("combine-after-change-calls" function (:arguments ("body")) nil [134077 134772])
            ("with-case-table" function (:arguments ("table" "body")) nil [134774 135295])
            ("save-match-data-internal" variable nil nil [135328 135361])
            ("save-match-data" function (:arguments ("body")) nil [135619 136299])
            ("match-string" function (:arguments ("num" "string")) nil [136301 136946])
            ("match-string-no-properties" function (:arguments ("num" "string")) nil [136948 137672])
            ("match-substitute-replacement" function (:arguments ("replacement" "fixedcase" "literal" "string" "subexp")) nil [137675 138324])
            ("looking-back" function (:arguments ("regexp" "limit" "greedy")) nil [138327 139512])
            ("looking-at-p" function (:arguments ("regexp")) nil [139514 139692])
            ("string-match-p" function (:arguments ("regexp" "string" "start")) nil [139694 139914])
            ("subregexp-context-p" function (:arguments ("regexp" "pos" "start")) nil [139916 141826])
            ("split-string-default-separators" variable
               (:constant-flag t
                :default-value "[ 	
]+")
                nil [141848 142201])
            ("split-string" function (:arguments ("string" "separators" "omit-nulls" "trim")) nil [142463 145579])
            ("combine-and-quote-strings" function (:arguments ("strings" "separator")) nil [145581 146142])
            ("split-string-and-unquote" function (:arguments ("string" "separator")) nil [146144 146780])
            ("subst-char-in-string" function (:arguments ("fromchar" "tochar" "string" "inplace")) nil [146814 147218])
            ("replace-regexp-in-string" function (:arguments ("regexp" "rep" "string" "fixedcase" "literal" "subexp" "start")) nil [147220 149799])
            ("string-prefix-p" function (:arguments ("str1" "str2" "ignore-case")) nil [149802 150101])
            ("string-suffix-p" function (:arguments ("suffix" "string" "ignore-case")) nil [150103 150512])
            ("bidi-string-mark-left-to-right" function (:arguments ("str")) nil [150514 151297])
            ("load-history-regexp" function (:arguments ("file")) nil [151337 151973])
            ("load-history-filename-element" function (:arguments ("file-regexp")) nil [151975 152411])
            ("put" code nil nil [152413 152459])
            ("eval-after-load" function (:arguments ("file" "form")) nil [152460 156341])
            ("with-eval-after-load" function (:arguments ("file" "body")) nil [156343 156623])
            ("after-load-functions" variable nil nil [156625 156798])
            ("do-after-load-evaluation" function (:arguments ("abs-file")) nil [156800 158339])
            ("eval-next-after-load" function (:arguments ("file")) nil [158341 158641])
            ("display-delayed-warnings" function nil nil [158645 158912])
            ("collapse-delayed-warnings" function nil nil [158914 159593])
            ("delayed-warnings-hook" variable (:default-value (quote (collapse-delayed-warnings display-delayed-warnings))) nil [159723 160063])
            ("delay-warning" function (:arguments ("type" "message" "level" "buffer-name")) nil [160065 160320])
            ("add-to-invisibility-spec" function (:arguments ("element")) nil [160349 160692])
            ("remove-from-invisibility-spec" function (:arguments ("element")) nil [160694 160918])
            ("with-syntax-table" function (:arguments ("table" "body")) nil [160942 161578])
            ("make-syntax-table" function (:arguments ("oldtable")) nil [161580 161900])
            ("syntax-after" function (:arguments ("pos")) nil [161902 162275])
            ("syntax-class" function (:arguments ("syntax")) nil [162277 162629])
            ("forward-whitespace" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [162676 163259])
            ("forward-symbol" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [163274 163823])
            ("forward-same-syntax" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [163844 164326])
            ("text-clone--maintaining" variable nil nil [164348 164384])
            ("text-clone--maintain" function (:arguments ("ol1" "after" "beg" "end" "_len")) nil [164386 166452])
            ("text-clone-create" function (:arguments ("start" "end" "spreadp" "syntax")) nil [166454 168702])
            ("define-mail-user-agent" function (:arguments ("symbol" "composefunc" "sendfunc" "abortfunc" "hookvar")) nil [168810 170388])
            ("called-interactively-p-functions" variable nil nil [170391 170808])
            ("internal--call-interactively" variable
               (:constant-flag t
                :default-value (symbol-function (quote call-interactively)))
                nil [170810 170887])
            ("called-interactively-p" function (:arguments ("kind")) nil [170889 174986])
            ("interactive-p" function nil nil [174988 175998])
            ("internal-push-keymap" function (:arguments ("keymap" "symbol")) nil [176000 176345])
            ("internal-pop-keymap" function (:arguments ("keymap" "symbol")) nil [176347 176655])
            ("define-obsolete-function-alias" code nil nil [176657 176744])
            ("set-transient-map" function (:arguments ("map" "keep-pred" "on-exit")) nil [176746 179049])
            ("progress-reporter-update" function (:arguments ("reporter" "value")) nil [179632 180399])
            ("make-progress-reporter" function (:arguments ("message" "min-value" "max-value" "current-value" "min-change" "min-time")) nil [180401 182246])
            ("progress-reporter-force-update" function (:arguments ("reporter" "value" "new-message")) nil [182248 182747])
            ("progress-reporter--pulse-characters" variable (:default-value ["-" "\\" "|" "/"]) nil [182749 182866])
            ("progress-reporter-do-update" function (:arguments ("reporter" "value")) nil [182868 184574])
            ("progress-reporter-done" function (:arguments ("reporter")) nil [184576 184731])
            ("dotimes-with-progress-reporter" function (:arguments ("spec" "message" "body")) nil [184733 185837])
            ("version-separator" variable
               (:constant-flag t
                :default-value ".")
                nil [185874 186033])
            ("version-regexp-alist" variable
               (:constant-flag t
                :default-value (quote (("^[-_+ ]?snapshot$" . -4) ("^[-_+]$" . -4) ("^[-_+ ]?\\(cvs\\|git\\|bzr\\|svn\\|hg\\|darcs\\)$" . -4) ("^[-_+ ]?alpha$" . -3) ("^[-_+ ]?beta$" . -2) ("^[-_+ ]?\\(pre\\|rc\\)$" . -1))))
                nil [186036 187531])
            ("version-to-list" function (:arguments ("ver")) nil [187534 189938])
            ("version-list-<" function (:arguments ("l1" "l2")) nil [189941 190772])
            ("version-list-=" function (:arguments ("l1" "l2")) nil [190775 191574])
            ("version-list-<=" function (:arguments ("l1" "l2")) nil [191577 192362])
            ("version-list-not-zero" function (:arguments ("lst")) nil [192364 192674])
            ("version<" function (:arguments ("v1" "v2")) nil [192677 193181])
            ("version<=" function (:arguments ("v1" "v2")) nil [193183 193701])
            ("version=" function (:arguments ("v1" "v2")) nil [193703 194197])
            ("menu-bar-separator" variable
               (:constant-flag t
                :default-value (quote ("--")))
                nil [194211 194273])
            ("when" code nil nil [194435 194560])
            ("unmsys--file-name" function (:arguments ("file")) nil [194693 195180]))          
      :file "subr.el.gz"
      :pointmax 195205
      :fsize 58196
      :lastmodtime '(21513 8534 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "custom.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("widget" include nil nil [1248 1265])
            ("custom-define-hook" variable nil nil [1267 1416])
            ("custom-dont-initialize" variable nil nil [1418 1601])
            ("custom-current-group-alist" variable nil nil [1603 1716])
            ("custom-initialize-default" function (:arguments ("symbol" "exp")) nil [1746 2209])
            ("custom-initialize-set" function (:arguments ("symbol" "exp")) nil [2211 2786])
            ("custom-initialize-reset" function (:arguments ("symbol" "exp")) nil [2788 3555])
            ("custom-initialize-changed" function (:arguments ("symbol" "exp")) nil [3557 4335])
            ("custom-delayed-init-variables" variable nil nil [4337 4434])
            ("custom-initialize-delay" function (:arguments ("symbol" "_value")) nil [4436 5560])
            ("custom-declare-variable" function (:arguments ("symbol" "default" "doc" "args")) nil [5562 8161])
            ("defcustom" function (:arguments ("symbol" "standard" "doc" "args")) nil [8163 14297])
            ("defface" function (:arguments ("face" "spec" "doc" "args")) nil [14325 17265])
            ("custom-current-group" function nil nil [17294 17383])
            ("custom-declare-group" function (:arguments ("symbol" "members" "doc" "args")) nil [17385 18446])
            ("defgroup" function (:arguments ("symbol" "members" "doc" "args")) nil [18448 19608])
            ("custom-add-to-group" function (:arguments ("group" "option" "widget")) nil [19610 19956])
            ("custom-group-of-mode" function (:arguments ("mode")) nil [19958 20360])
            ("custom-handle-all-keywords" function (:arguments ("symbol" "args" "type")) nil [20379 20969])
            ("custom-handle-keyword" function (:arguments ("symbol" "keyword" "value" "type")) nil [20971 21682])
            ("custom-add-dependencies" function (:arguments ("symbol" "value")) nil [21684 22437])
            ("custom-add-option" function (:arguments ("symbol" "option")) nil [22439 22890])
            ("defalias" code nil nil [22891 22947])
            ("custom-add-link" function (:arguments ("symbol" "widget")) nil [22949 23185])
            ("custom-add-version" function (:arguments ("symbol" "version")) nil [23187 23337])
            ("custom-add-package-version" function (:arguments ("symbol" "version")) nil [23339 23513])
            ("custom-add-load" function (:arguments ("symbol" "load")) nil [23515 23811])
            ("custom-autoload" function (:arguments ("symbol" "load" "noset")) nil [23813 24099])
            ("custom-variable-p" function (:arguments ("variable")) nil [24101 24534])
            ("define-obsolete-function-alias" code nil nil [24536 24611])
            ("custom-note-var-changed" function (:arguments ("variable")) nil [24613 24908])
            ("custom-load-recursion" variable nil nil [25051 25127])
            ("custom-load-symbol" function (:arguments ("symbol")) nil [25129 26388])
            ("custom-local-buffer" variable nil nil [26391 26711])
            ("put" code nil nil [26712 26757])
            ("custom-set-default" function (:arguments ("variable" "value")) nil [26759 27140])
            ("custom-set-minor-mode" function (:arguments ("variable" "value")) nil [27142 27566])
            ("custom-quote" function (:arguments ("sexp")) nil [27568 27906])
            ("customize-mark-to-save" function (:arguments ("symbol")) nil [27908 29071])
            ("customize-mark-as-set" function (:arguments ("symbol")) nil [29073 30228])
            ("custom-reevaluate-setting" function (:arguments ("symbol")) nil [30230 30702])
            ("custom-known-themes" variable (:default-value (quote (user changed))) nil [32529 32917])
            ("custom-theme-p" function (:arguments ("theme")) nil [32919 33028])
            ("custom-check-theme" function (:arguments ("theme")) nil [33030 33208])
            ("custom-push-theme" function (:arguments ("prop" "symbol" "theme" "mode" "value")) nil [33210 35406])
            ("custom-fix-face-spec" function (:arguments ("spec")) nil [35408 36178])
            ("custom-set-variables" function (:arguments ("args")) nil [36181 36792])
            ("custom-theme-set-variables" function (:arguments ("theme" "args")) nil [36794 39469])
            ("custom--sort-vars-table" variable nil nil [39471 39503])
            ("custom--sort-vars-result" variable nil nil [39504 39537])
            ("custom--sort-vars" function (:arguments ("vars")) nil [39539 41071])
            ("custom--sort-vars-1" function (:arguments ("sym" "_ignored")) nil [41073 41657])
            ("deftheme" function (:arguments ("theme" "doc" "ignored")) nil [42253 42874])
            ("custom-declare-theme" function (:arguments ("theme" "feature" "doc" "ignored")) nil [42876 43364])
            ("custom-make-theme-feature" function (:arguments ("theme")) nil [43366 43871])
            ("custom-theme-directory" variable (:default-value user-emacs-directory) nil [43895 44242])
            ("custom-theme-load-path" variable (:default-value (list (quote custom-theme-directory) t)) nil [44244 45045])
            ("custom--inhibit-theme-enable" variable nil nil [45047 45333])
            ("provide-theme" function (:arguments ("theme")) nil [45335 45733])
            ("custom-safe-themes" variable (:default-value (quote (default))) nil [45735 46355])
            ("load-theme" function
               (:user-visible-flag t
                :arguments ("theme" "no-confirm" "no-enable"))
                nil [46357 49233])
            ("custom-theme-load-confirm" function (:arguments ("hash")) nil [49235 49985])
            ("custom-theme-name-valid-p" function (:arguments ("name")) nil [49987 50252])
            ("custom-available-themes" function nil nil [50254 51134])
            ("custom-theme--load-path" function nil nil [51136 51455])
            ("enable-theme" function
               (:user-visible-flag t
                :arguments ("theme"))
                nil [51502 52738])
            ("custom-enabled-themes" variable nil nil [52740 54050])
            ("custom-theme-enabled-p" function (:arguments ("theme")) nil [54052 54170])
            ("disable-theme" function
               (:user-visible-flag t
                :arguments ("theme"))
                nil [54172 55771])
            ("declare-function" code nil nil [55813 55907])
            ("custom--frame-color-default" function (:arguments ("frame" "attribute" "resource-attr" "resource-class" "tty-default" "x-default")) nil [55909 56269])
            ("custom-variable-theme-value" function (:arguments ("variable")) nil [56271 56664])
            ("custom-theme-recalc-variable" function (:arguments ("variable")) nil [56666 57121])
            ("custom-theme-recalc-face" function (:arguments ("face")) nil [57123 57543])
            ("custom-theme-reset-variables" function (:arguments ("theme" "args")) nil [57760 58131])
            ("custom-reset-variables" function (:arguments ("args")) nil [58133 58474])
            ("custom" package nil nil [58490 58507]))          
      :file "custom.el.gz"
      :pointmax 58533
      :fsize 17003
      :lastmodtime '(21291 53104 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!share!emacs!24.4!lisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
