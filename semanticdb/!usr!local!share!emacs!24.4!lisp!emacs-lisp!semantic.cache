;; Object emacs-lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "emacs-lisp/"
  :tables
  (list
    (semanticdb-table "byte-run.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("macro-declaration-function" variable (:default-value (function macro-declaration-function)) nil [1239 1571])
            ("defalias" code nil nil [1573 2715])
            ("defun-declarations-alist" variable (:default-value (list (list (quote advertised-calling-convention) (function (lambda (f _args arglist when) (list (quote set-advertised-calling-convention) (list (quote quote) f) (list (quote quote) arglist) (list (quote quote) when))))) (list (quote obsolete) (function (lambda (f _args new-name when) (list (quote make-obsolete) (list (quote quote) f) (list (quote quote) new-name) (list (quote quote) when))))) (list (quote compiler-macro) (function (lambda (f args compiler-function) (\` (eval-and-compile (put (quote (\, f)) (quote compiler-macro) (\, (if (eq (car-safe compiler-function) (quote lambda)) (\` (lambda (\, (append (cadr compiler-function) args)) (\,@ (cddr compiler-function)))) (\` (function (\, compiler-function))))))))))) (list (quote doc-string) (function (lambda (f _args pos) (list (quote put) (list (quote quote) f) (quote (quote doc-string-elt)) (list (quote quote) pos))))) (list (quote indent) (function (lambda (f _args val) (list (quote put) (list (quote quote) f) (quote (quote lisp-indent-function)) (list (quote quote) val))))))) nil [2912 4524])
            ("macro-declarations-alist" variable (:default-value (cons (list (quote debug) (function (lambda (name _args spec) (list (quote progn) :autoload-end (list (quote put) (list (quote quote) name) (quote (quote edebug-form-spec)) (list (quote quote) spec)))))) defun-declarations-alist)) nil [4526 5153])
            ("put" code nil nil [5155 5188])
            ("put" code nil nil [5189 5228])
            ("defalias" code nil nil [5229 6948])
            ("defun" function (:arguments ("name" "arglist" "docstring" "body")) nil [6997 9374])
            ("fset" code nil nil [9480 9501])
            ("defsubst" function (:arguments ("name" "arglist" "body")) nil [10512 10983])
            ("advertised-signature-table" variable (:default-value (make-hash-table :test (quote eq) :weakness (quote key))) nil [10985 11063])
            ("set-advertised-calling-convention" function (:arguments ("function" "signature" "_when")) nil [11065 11435])
            ("make-obsolete" function (:arguments ("obsolete-name" "current-name" "when")) nil [11437 12330])
            ("define-obsolete-function-alias" function (:arguments ("obsolete-name" "current-name" "when" "docstring")) nil [12332 13149])
            ("make-obsolete-variable" function (:arguments ("obsolete-name" "current-name" "when" "access-type")) nil [13151 13982])
            ("define-obsolete-variable-alias" function (:arguments ("obsolete-name" "current-name" "when" "docstring")) nil [13985 15680])
            ("define-obsolete-face-alias" function (:arguments ("obsolete-face" "current-face" "when")) nil [16010 16396])
            ("dont-compile" function (:arguments ("body")) nil [16398 16707])
            ("eval-when-compile" function (:arguments ("body")) nil [16950 17311])
            ("eval-and-compile" function (:arguments ("body")) nil [17313 17691])
            ("with-no-warnings" function (:arguments ("body")) nil [17693 17901])
            ("make-obsolete-variable" code nil nil [19196 19305])
            ("make-obsolete" code nil nil [19306 19397]))          
      :file "byte-run.el.gz"
      :pointmax 19425
      :fsize 5834
      :lastmodtime '(21291 53104 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!share!emacs!24.4!lisp!emacs-lisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
